



Network Working Group                                      A. Huang Feng
Internet-Draft                                               P. Francois
Updates: RFC7950 RFC7951 RFC9254 (if approved)                 INSA-Lyon
Intended status: Standards Track                                 T. Graf
Expires: 22 April 2025                                          Swisscom
                                                               B. Claise
                                                                  Huawei
                                                         19 October 2024


           Extensible YANG model for YANG-Push Notifications
                 draft-netana-netconf-notif-envelope-01

Abstract

   This document defines a new extensible notification structure,
   defined in YANG, for use in YANG-Push Notification messages enabling
   any YANG compatible encodings such as XML, JSON or CBOR.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 22 April 2025.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.











Huang Feng, et al.        Expires 22 April 2025                 [Page 1]

Internet-Draft       YANG-Push Notification Envelope        October 2024


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Relationship to past documents  . . . . . . . . . . . . . . .   4
     2.1.  Relationship to RFC5277 . . . . . . . . . . . . . . . . .   4
     2.2.  Relationship to RFC8639 . . . . . . . . . . . . . . . . .   4
     2.3.  Relationship to RFC7950 . . . . . . . . . . . . . . . . .   4
     2.4.  Relationship to RFC7951 . . . . . . . . . . . . . . . . .   5
     2.5.  Relationship to RFC9254 . . . . . . . . . . . . . . . . .   5
   3.  Solution  . . . . . . . . . . . . . . . . . . . . . . . . . .   5
     3.1.  Enabling the Notification Envelope  . . . . . . . . . . .   6
     3.2.  Discovering the support of this model . . . . . . . . . .   7
     3.3.  Notification Envelope . . . . . . . . . . . . . . . . . .   7
     3.4.  Extensions for the Notification Envelope  . . . . . . . .  12
   4.  Operational Considerations  . . . . . . . . . . . . . . . . .  14
   5.  YANG Module . . . . . . . . . . . . . . . . . . . . . . . . .  14
     5.1.  YANG Tree Diagram . . . . . . . . . . . . . . . . . . . .  14
     5.2.  YANG Module . . . . . . . . . . . . . . . . . . . . . . .  15
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .  19
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  19
     7.1.  URI . . . . . . . . . . . . . . . . . . . . . . . . . . .  19
     7.2.  YANG module name  . . . . . . . . . . . . . . . . . . . .  20
     7.3.  YANG SID-file . . . . . . . . . . . . . . . . . . . . . .  20
   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  20
   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  20
     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  20
     9.2.  Informative References  . . . . . . . . . . . . . . . . .  22
   Appendix A.  .sid file  . . . . . . . . . . . . . . . . . . . . .  23
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  24

1.  Introduction

   YANG-Push [RFC8639] allows publishers to send notifications to a data
   collection.  The YANG-Push receiver decodes the message and
   optionally validates the header and the content before forwarding to
   the next process.





Huang Feng, et al.        Expires 22 April 2025                 [Page 2]

Internet-Draft       YANG-Push Notification Envelope        October 2024


   The notification container from YANG-Push is currently based on the
   XML model from NETCONF Event Notifications [RFC5277].  This model has
   the drawback that only a single mandatory "eventTime" leaf is defined
   and does offer a way to extend this header with new metadata.
   Additionally, this XML model is only valid for XML-based
   environments.  When messages are encoded in other YANG encodings,
   such as JSON [RFC7951] or CBOR [RFC9254], validators cannot use YANG
   to validate the message schema.

   YANG data consumer receiving notifications require additional
   metadata to understand the full context of the received message.  For
   example, in addition to the timestamp of when the event was encoded,
   it is also important to know the hostname which sourced the message,
   and have sequence numbers in generated messages so that lost
   notification messages can be detected.  This additional metadata is
   also helpful to correlate the data with other sources of Network
   Telemetry [RFC9232] information.

   For such reasons, this document proposes the following:

   *  First, it provides an extensible YANG notification header allowing
      implementors and IETF contributors to easily add new metadata to
      the notification message.

   *  Second, it provides the first crucial extensions enabling
      operators to identify which network node publishes which YANG-Push
      messages and when the events or metrics were observed on the
      network node.

   *  And finally, it provides a way to enable and disable these
      extensions on a subscription basis, making the coexistence of
      different YANG-Push and NETCONF Event Notification [RFC5277]
      possible.

1.1.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   The terms "subscriber", "publisher", and "receiver" are used as
   defined in [RFC8639].

   The terms "client" is used as defined in [RFC6241] for NETCONF and
   [RFC8040] for RESTCONF.




Huang Feng, et al.        Expires 22 April 2025                 [Page 3]

Internet-Draft       YANG-Push Notification Envelope        October 2024


   The terms "implementation-time information" and "runtime information"
   are used as defined in [RFC9196].

2.  Relationship to past documents

   This section shows the relationship to [RFC5277], [RFC8639],
   [RFC7951] and [RFC9254].

2.1.  Relationship to RFC5277

   [RFC5277] defines a mechanism for NETCONF nodes to send notifications
   to a collector.  These are the key relationships between the current
   document and [RFC5277]:

   *  This document does not change the header defined by [RFC5277] nor
      update any behavior defined in [RFC5277].  Implementations of
      [RFC5277] use the header defined in Section 2.2.1 of [RFC5277].

   *  The co-existance of the notification model defined in [RFC5277]
      and the model defined in the current document is possible.  The
      co-existence is discussed in Section 4.

2.2.  Relationship to RFC8639

   Subscribed Notifications [RFC8639] defines a mechanism on top of
   [RFC5277] to stream notifications from the NETCONF node.  These are
   the key relationships between the current document and [RFC8639]:

   *  Section 1.4 of [RFC8639] states that the the solution uses the
      notification header defined in [RFC5277].  This document proposes
      a new header, which clients can enable and replace the previously
      [RFC5277] defined.  When this new header is used, notification
      messages are encoded as defined in Section Section 3.3.

   *  Section 2.4.2 of [RFC8639] defines how a YANG-Push subscription is
      defined via an the 'establish-subscription' RPC.  This document
      extends the RPCs from Subscribed Notifications [RFC8639] to
      support enabling the new header defined in this document.

2.3.  Relationship to RFC7950

   [RFC7950] defines how YANG data is encoded in XML.  These are the key
   relationship points between the current document and [RFC7950]:








Huang Feng, et al.        Expires 22 April 2025                 [Page 4]

Internet-Draft       YANG-Push Notification Envelope        October 2024


   *  Section 7.16.2 of [RFC7950] defines the XML encoding of YANG
      notification.  This document defines a new header for such
      notifications.  When a YANG-Push publisher implements the
      specifications in this document with the XML encoding, the
      notifications are encoded according to Section 3.3.2.1 in this
      document.

2.4.  Relationship to RFC7951

   [RFC7951] defines how YANG data is encoded using JSON.  These are the
   key relationship points between the current document and [RFC7951]:

   *  [RFC7951] does not define explicitly how a YANG notification
      should be encoded using JSON encoding.  This document specifies a
      new header for such notifications.  When a YANG-Push publisher
      implements the specifications in this document with JSON encoding,
      the notifications are encoded according to Section 3.3.2.2 in this
      document.

2.5.  Relationship to RFC9254

   [RFC9254] defines how YANG data is encoded using CBOR.  These are the
   key relationship points between the current document and [RFC9254]:

   *  [RFC9254] does not define explicitly how a YANG notification
      should be encoded using CBOR encoding.  When a YANG-Push publisher
      implements the specifications in this document in CBOR encoding,
      the notifications are encoded according to Section 3.3.2.3 in this
      document.

3.  Solution

   Section 4.2.10 of [RFC7950] defines the encoding of YANG
   notifications.  A notification is created by defining a
   'notification' statement in the YANG module.  When a NETCONF server
   sends this notification, it is composed of two parts: a header
   containing metadata which encapsulates the content and the content
   defined by the 'notification' statement.

   In YANG 1.1 [RFC7950], the notification header is based on the model
   defined in [RFC5277] which contains a single metadata 'eventTime'
   leaf.  An example extracted from [RFC7950] is shown in the following
   XML:








Huang Feng, et al.        Expires 22 April 2025                 [Page 5]

Internet-Draft       YANG-Push Notification Envelope        October 2024


     <notification
         xmlns="urn:ietf:params:netconf:capability:notification:1.0">
       <eventTime>2007-09-01T10:00:00Z</eventTime>
       <link-failure xmlns="urn:example:system">
         <if-name>so-1/2/3.0</if-name>
         <if-admin-status>up</if-admin-status>
         <if-oper-status>down</if-oper-status>
       </link-failure>
     </notification>

   This document defines a new notification header and enables extending
   it with new metadata.  The notification header defined in the
   following sections is to be used in YANG-Push [RFC8641] environments
   and can be implemented with NETCONF [RFC6241] and RESTCONF [RFC8040].

   Section 3.1 defines how a client enables the header defined in this
   document.  Section 3.2 extends the model from [RFC9196] to enable
   clients to discover the capability of using the new notification
   header for both implementation-time information and runtime
   information.  Lastly, Section 3.3.2 defines the new notification
   header and how it is encoded using XML, JSON and CBOR.

3.1.  Enabling the Notification Envelope

   The use of the notification envelope defined in this document can be
   enabled during the configuration of a YANG-Push subscription.  This
   document augments the "ietf-subscribed-notification" model [RFC8639]
   to support the configuration of "notification-envelope".

     module: ietf-notification-container

       augment /sn:subscriptions/sn:subscription:
         +--rw enable-notification-envelope?   boolean {notification-envelope}?
         +--rw metadata
       augment /sn:establish-subscription/sn:input:
         +---w enable-notification-envelope?   boolean {notification-envelope}?
         +---w metadata
       augment /sn:modify-subscription/sn:input:
         +---w enable-notification-envelope?   boolean {notification-envelope}?
         +---w metadata

   When the node 'enable-notification-envelope' is set to true, the
   notifications published by a YANG-Push publisher MUST use the header
   defined in Section 3.3.1.  If any metadata is enabled during the
   configuration of the subscription, the metadata nodes MUST be present
   in the header.





Huang Feng, et al.        Expires 22 April 2025                 [Page 6]

Internet-Draft       YANG-Push Notification Envelope        October 2024


3.2.  Discovering the support of this model

   A client can discover the support of 'notification-envelope' model
   through the capabilities model defined in [RFC9196].  This documents
   extends the 'ietf-notification-capabilities' model with a container
   that includes:

   *  A leaf 'notification-envelope', stating that the YANG notification
      can be encoded following the notification-envelope model.

   *  A container 'metadata' containing all the supported extensions to
      this header.

   The YANG model defined in Section 5 augments the 'ietf-notification-
   capabilities' model with the leaf and container listed above.

     augment /sysc:system-capabilities/notc:subscription-capabilities:
       +--ro notification-metadata
          +--ro notification-envelope?   boolean {notification-envelope}?
          +--ro metadata

   This model can be retrieved via a NETCONF <get> RPC.

3.3.  Notification Envelope

   This section defines how YANG notifications are structured when the
   notification envelope is enabled on a YANG-Push subscription.  The
   following sections define how this model is encoded in XML, JSON and
   CBOR.

3.3.1.  Base Notification Model

   When a YANG-Push publisher uses the notification model defined in
   this document, the notification is structured as follows:

   *  The notification is encapsulated in a root "envelope" container.

   *  The header of the notification contains the metadata that is
      enabled during the configuration of the subscription as a child
      nodes of the root "notification-envelope" container.

   *  The content of the notification defined by the 'notification'
      statement is encoded in the 'notification-contents' leaf.

   The following YANG tree [RFC8340] illustrates the notification
   envelope containing the mandatory metadata 'event-time'.  See
   Section 3.4 for more detail on the optional metadata.




Huang Feng, et al.        Expires 22 April 2025                 [Page 7]

Internet-Draft       YANG-Push Notification Envelope        October 2024


     notifications:
       +---n envelope
          +--ro event-time                   yang:date-and-time
          +--ro notification-contents?       <anydata>

3.3.2.  Encoding of the Notification model

   The YANG notification can be encoded using XML
   [W3C.REC-xml-20001006][RFC7951], JSON [RFC7951] and CBOR [RFC9254].

3.3.2.1.  XML encoding

   A YANG notification encoded in XML is structured as a root "envelope"
   container.  The namespace of this container is the namespace defined
   in the YANG module "ietf-yp-notification":

       urn:ietf:params:xml:ns:netconf:notification:2.0

   Two mandatory child nodes within the "envelope" container are
   expected, representing the event time and the notification payload.
   The "event-time" node is defined within the same XML namespace as the
   "envelope" container.  The "event-time" node MUST be compliant with
   [RFC3339].  Other metadata defined within the YANG module defined in
   Section 5 MUST use the same XML namespace.  See Section 3.4 for more
   details.

   When other metadata is enabled through configuration, the
   supplementary nodes are encoded at the same level of the mandatory
   "event-time" node and use the XML namespace defined in the YANG
   module.

   The content of the notification that is defined by the 'notification'
   statement is encoded in the "notification-contents" node.  The name
   and namespace of this payload element are determined by the YANG
   module containing the 'notification' statement representing the
   notification message.

   The following example shows a "push-update" notification defined in
   the YANG module of YANG-Push [RFC8641] encoded in XML:












Huang Feng, et al.        Expires 22 April 2025                 [Page 8]

Internet-Draft       YANG-Push Notification Envelope        October 2024


     <envelope xmlns="urn:ietf:params:xml:ns:netconf:notification:2.0">
       <event-time>2024-10-10T10:59:55.32Z</event-time>
       <notification-contents>
         <push-update xmlns="urn:ietf:params:xml:ns:yang:ietf-yang-push">
           <id>1011</id>
           <datastore-contents>
             <interfaces xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces">
               <interface>
                 <name>eth0</name>
                 <oper-status>up</oper-status>
               </interface>
             </interfaces>
           </datastore-contents>
         </push-update>
       </notification-contents>
     </envelope>

                     Figure 1: XML-encoded notification

3.3.2.2.  JSON Encoding

   A YANG notification encoded in JSON is structured as a root
   "envelope" container.  The namespace of this container is the name of
   the YANG module "ietf-yp-notification" defined in Section 5.

   Two mandatory child nodes within the "ietf-notification:envelope"
   container are expected, representing the event time and the
   notification payload.  The "event-time" node is defined within the
   same namespace as the "ietf-yp-notification:envelope" container and
   is compliant with [RFC3339].  Other metadata defined within the YANG
   module defined in Section 5 MUST use the same namespace "ietf-yp-
   notification".

   When other metadata is enabled through configuration, the
   supplementary nodes are encoded at the same level of the mandatory
   'event-time' node and use the YANG module name as its namespace.  See
   Section 3.4 for more details.

   The content of the notification that is defined by the 'notification'
   statement is encoded in the "notification-contents" node.  The name
   and namespace of this payload element are determined by the YANG
   module containing the 'notification' statement representing the
   notification message.

   The following example shows a "push-update" notification defined in
   the YANG module of YANG-Push [RFC8641] encoded in JSON:





Huang Feng, et al.        Expires 22 April 2025                 [Page 9]

Internet-Draft       YANG-Push Notification Envelope        October 2024


       {
           "ietf-yp-notification:envelope": {
               "event-time": "2024-10-10T08:00:11.22Z",
               "notification-contents": {
                 "ietf-yang-push:push-update": {
                     "id": 1011,
                     "datastore-contents": {
                         "ietf-interfaces:interfaces": [
                             {
                                 "interface": {
                                     "name": "eth0",
                                     "oper-status": "up"
                                 }
                             }
                         ]
                     }
                 }
               }
           }
       }

                    Figure 2: JSON-encoded notification

3.3.2.3.  CBOR Encoding

   YANG notifications can be encoded in CBOR using Names or SIDs in
   keys.

   Notifications encoded using names is similar to JSON encoding as
   defined in Section 3.3 of [RFC9254].  The key of the element can be
   the name of the element itself or be namespace-qualified.  In the
   latter case, the namespace of the notification container uses the
   YANG module name "ietf-yp-notification" defined in Section 5.

   Notification encoded using YANG-SIDs replaces the names of the keys
   of the CBOR encoded message for a 63 bit unsigned integer.  In this
   case, the keys of the encoded data use the SID value as defined in
   Section 3.2 of [RFC9254].  A SID allocation process is needed
   beforehand following [I-D.ietf-core-sid].

   In the notification, two mandatory child nodes within the "ietf-yp-
   notification:envelope" container are expected, representing the event
   time and the notification payload.  The "event-time" node is defined
   within the same namespace as the "ietf-yp-notification:envelope"
   container and is compliant with [RFC3339].






Huang Feng, et al.        Expires 22 April 2025                [Page 10]

Internet-Draft       YANG-Push Notification Envelope        October 2024


   When other metadata is enabled through configuration, the
   supplementary nodes are encoded at the same level of the mandatory
   "event-time" node and use the YANG module name as its namespace when
   they are encoded as names.  When they are encoded using YANG SIDs, a
   SID value assigned to the metadata node is used.  See Section 3.4 for
   more details.

   The content of the notification that is defined by the 'notification'
   statement is encoded in the "notification-contents" node.  The name
   and namespace of this payload element are determined by the YANG
   module containing the 'notification' statement representing the
   notification message.  Similarly, SIDs can be used as keys if they
   are well allocated.

   Figure 3 shows a "push-update" notification defined in the YANG
   module of YANG-Push [RFC8641] encoded in CBOR using names as keys.
   The example uses the CBOR diagnostic notation as defined in section
   3.1 of [RFC9254]:

     {
         "ietf-yp-notification:envelope": {
             "event-time": "2024-10-10T08:00:11.22Z",
             "notification-contents": {
               "ietf-yang-push:push-update": {
                   "id": 1011,
                   "datastore-contents": {
                       "ietf-interfaces:interfaces": [
                           {
                               "interface": {
                                   "name": "eth0",
                                   "oper-status": "up"
                               }
                           }
                       ]
                   }
               }
             }
         }
     }

       Figure 3: CBOR-encoded notification using diagnostic notation

   And Figure 4 shows the same notifcation encoded using SIDs:








Huang Feng, et al.        Expires 22 April 2025                [Page 11]

Internet-Draft       YANG-Push Notification Envelope        October 2024


     {
         2551: {
             1: "2024-10-10T08:00:11.22Z",
             4: {
               "ietf-yang-push:push-update": {
                   "id": 1011,
                   "datastore-contents": {
                       "ietf-interfaces:interfaces": [
                           {
                               "interface": {
                                   "name": "eth0",
                                   "oper-status": "up"
                               }
                           }
                       ]
                   }
               }
             }
         }
     }

        Figure 4: CBOR-encoded notification using YANG SIDs in CBOR
                            diagnostic notation

3.4.  Extensions for the Notification Envelope

   This section described two optional YANG notification header
   extensions which are enabled by default when the notification
   envelope is enabled.  When the envelope is enabled using the "enable-
   notification-envelope" node, the publisher includes by default the
   "hostname" and "sequence-number" defined in the following sections.
   The client discovers the support of these two extension headers with
   the mechanism defined in Section 3.2.

   This document defines the following metadata as shown in the
   following YANG tree [RFC8340].  See the following sections for more
   details.

     notifications:
       +---n envelope
          +--ro event-time                   yang:date-and-time
          +--ro hostname?                    inet:host
          |       {notification-hostname-sequence-number}?
          +--ro sequence-number?             yang:counter32
          |       {notification-hostname-sequence-number}?
          +--ro notification-contents?       <anydata>





Huang Feng, et al.        Expires 22 April 2025                [Page 12]

Internet-Draft       YANG-Push Notification Envelope        October 2024


3.4.1.  Support of Hostname and Sequencing in YANG Notifications

   When YANG-Push notification messages are forwarded from a receiver to
   another system, such as a message broker or a time series database,
   the transport context is lost since it is not part of the metadata of
   the notification container.  Therefore, the downstream system is
   unable to associate the message to the publishing process (the
   exporting network node), nor able to detect message loss or
   reordering.

   To correlate network data among different Network Telemetry planes as
   described in Section 3.1 of [RFC9232] or among different YANG-Push
   subscription types as defined in Section 3.1 of [RFC8641], a
   reference to the node streaming the data is needed.  This is
   essential for understanding the timely relationship among these
   different planes and YANG-Push subscription types.

   Today, network operators work around this impediment by preserving
   the transport source IP address and sequence numbers of the
   publishing process.  However, this implies encoding this information
   in the YANG-Push notification messages which impacts the semantic
   readability of the message in the downstream system.

   On top of that, the transport source IP address might not represent
   the management IP address by which the YANG-Push publisher should be
   known.  In other terms, the source-host [RFC6470], which is the
   "Address of the remote host for the session" might not be the
   management IP address.

   To overcome these issues, this document proposes a notification
   container extension with a hostname and a sequence number.  This
   allows the downstream system to not only be able to identify from
   which network node, subscription, and time the message was published
   but also, the order of the published messages.

   hostname:  Describes the node's hostname according to the 'sysName'
      object definition in [RFC1213] from where the message was
      published from.  This value is usually configured on the node by
      the administrator to uniquely identify the node in the network.

   sequence-number:  Generates a unique sequence number for each
      published message by the publisher process.  The number counts up
      at every published notification message as described in [RFC9187].

   Figure 5 provides an example of a JSON encoded, [RFC8259], "push-
   update" notification message with hostname and sequence-number as
   extension.




Huang Feng, et al.        Expires 22 April 2025                [Page 13]

Internet-Draft       YANG-Push Notification Envelope        October 2024


   ========== NOTE: '\' line wrapping per RFC 8792) ===========

   {
       "ietf-yp-notification:envelope": {
       "event-time": "2023-03-25T08:30:11.22Z",
       "hostname": "example-router",
       "sequence-number": 1,
       "notification-contents": {
         "ietf-yang-push:push-update": {
           "id": 6666,
           "datastore-contents": {
             "ietf-interfaces:interfaces": [
               {
                 "interface": {
                   "name": "eth0",
                   "type": "iana-if-type:ethernetCsmacd",
                   "oper-status": "up",
                   "mtu": 1500
                 }
               }
             ]
           }
         }
       }
     }
   }

       Figure 5: JSON Example for a push-update notification message

4.  Operational Considerations

   TBD: explain co-existence with RFC5277

5.  YANG Module

5.1.  YANG Tree Diagram

   This YANG module extends "ietf-subscribed-notifications" [RFC8641]
   and "ietf-notification-capabilities" [RFC9196] as shown in the
   following YANG tree [RFC8340]:











Huang Feng, et al.        Expires 22 April 2025                [Page 14]

Internet-Draft       YANG-Push Notification Envelope        October 2024


   module: ietf-yp-notification

     augment /sn:subscriptions/sn:subscription:
       +--rw enable-notification-envelope?   boolean
       +--rw metadata
     augment /sn:establish-subscription/sn:input:
       +---w enable-notification-envelope?   boolean
       +---w metadata
     augment /sn:modify-subscription/sn:input:
       +---w enable-notification-envelope?   boolean
       +---w metadata
     augment /sysc:system-capabilities/notc:subscription-capabilities:
       +--ro notification-metadata
          +--ro notification-envelope?   boolean
          +--ro metadata
             +--ro hostname-sequence-number?   boolean

     notifications:
       +---n envelope
          +--ro event-time               yang:date-and-time
          +--ro hostname?                inet:host
          +--ro sequence-number?         yang:counter32
          +--ro notification-contents?   <anydata>

5.2.  YANG Module

   The YANG module augments the module "ietf-subscribed-notifications"
   [RFC8641] and uses "ietf-yang-types" module [RFC6991].

   <CODE BEGINS> file "ietf-yp-notification@2024-10-18.yang"
   module ietf-yp-notification {
     yang-version 1.1;
     namespace "urn:ietf:params:xml:ns:netconf:notification:2.0";
     prefix inotenv;
     import ietf-yang-types {
       prefix yang;
       reference
         "RFC 6991: Common YANG Data Types";
     }
     import ietf-inet-types {
       prefix inet;
       reference
         "RFC 6991: Common YANG Data Types";
     }
     import ietf-subscribed-notifications {
       prefix sn;
       reference
         "RFC 8639: Subscription to YANG Notifications";



Huang Feng, et al.        Expires 22 April 2025                [Page 15]

Internet-Draft       YANG-Push Notification Envelope        October 2024


     }
     import ietf-system-capabilities {
       prefix sysc;
       reference
         "RFC 9196: YANG Modules Describing Capabilities for
          Systems and Datastore Update Notifications";
     }
     import ietf-notification-capabilities {
       prefix notc;
       reference
         "RFC 9196: YANG Modules Describing Capabilities for
          Systems and Datastore Update Notifications";
     }

     organization "IETF NETCONF (Network Configuration) Working Group";
     contact
       "WG Web:   <https://datatracker.ietf.org/group/netconf/>
        WG List:  <mailto:netconf@ietf.org>

        Authors:  Alex Huang Feng
                  <mailto:alex.huang-feng@insa-lyon.fr>
                  Pierre Francois
                  <mailto:pierre.francois@insa-lyon.fr>
                  Thomas Graf
                  <mailto:thomas.graf@swisscom.com>
                  Benoit Claise
                  <mailto:benoit.claise@huawei.com>";

     description
       "Defines a notification header for Subscribed Notifications
       [RFC8639] and YANG-Push [RFC8641]. When this notification header
       is enabled through configuration, the root container of the
       notification is encoded as defined in RFCXXX.

       This module can be used to validate XML encoded notifications
       [RFC7950], JSON encoded messages [RFC7951] and CBOR encoded
       messages [RFC9254]. Refer to Section Y of RFC XXXX for more
       details.

       Copyright (c) 2024 IETF Trust and the persons identified as
       authors of the code.  All rights reserved.

       Redistribution and use in source and binary forms, with or
       without modification, is permitted pursuant to, and subject to
       the license terms contained in, the Revised BSD License set
       forth in Section 4.c of the IETF Trust's Legal Provisions
       Relating to IETF Documents
       (https://trustee.ietf.org/license-info).



Huang Feng, et al.        Expires 22 April 2025                [Page 16]

Internet-Draft       YANG-Push Notification Envelope        October 2024


       This version of this YANG module is part of RFC XXXX
       (https://www.rfc-editor.org/info/rfcXXXX); see the RFC itself
       for full legal notices.";

     revision 2024-10-18 {
       description
         "First revision";
       reference
         "RFC XXXX: YANG-Push Notification Envelope";
     }

     grouping notif-env-configuration {
       description
         "This grouping defines the configuration switches for
         enabling the notification-envelope defined in RFC XXXX
         and the different supported metadata.";
       leaf enable-notification-envelope {
         type boolean;
         default false;
         description
           "Enables YANG-Push to use the notification-envelope
           defined in RFC XXXX.";
       }
       container metadata {
         description
           "Container for configuring optional metadata.";
       }
     }

     grouping notif-env-capabilities {
       description
         "This grouping defines the capabilities for
         the notification-envelope defined in RFC XXXX
         and the different supported metadata.";
       leaf notification-envelope {
         type boolean;
         default false;
         description
           "Supports YANG-Push to use the notification-envelope
           defined in RFC XXXX.";
       }
       container metadata {
         description
           "Container with the supported optional metadata by the
           YANG-Push publisher.";
         leaf hostname-sequence-number {
           type boolean;
           default false;



Huang Feng, et al.        Expires 22 April 2025                [Page 17]

Internet-Draft       YANG-Push Notification Envelope        October 2024


           description
             "Supports hostname and sequence-number
             in the YANG-Push notifications as defined in the
             YANG-Push notification-envelope in RFC XXXX.";
         }
       }
     }

     notification envelope {
       leaf event-time {
         type yang:date-and-time;
         mandatory true;
         description
           "The date and time the event was generated by the event
           source. This parameter is of type dateTime and compliant
           to [RFC3339].";
       }
       leaf hostname {
         type inet:host;
         description
           "The hostname of the network node according to
           [RFC1213]. This value is usually configured on the node
           by the administrator to uniquely identify the node in
           the network.";
       }
       leaf sequence-number {
         type yang:counter32;
         description
           "Unique sequence number as described in [RFC9187] for each
           published message.";
       }
       anydata notification-contents {
         description
           "This contains the values defined by the 'notification'
           statement unchanged.";
       }
     }

     // Subscription container
     augment "/sn:subscriptions/sn:subscription" {
       description
         "This augmentation adds the configuration switches for
         enabling the notification envelope and metadatas.";
       uses notif-env-configuration;
     }
     // Subscription RPCs
     augment "/sn:establish-subscription/sn:input" {
       description



Huang Feng, et al.        Expires 22 April 2025                [Page 18]

Internet-Draft       YANG-Push Notification Envelope        October 2024


         "This augmentation adds the configuration switches for
         enabling the notification envelope and other metadatas
         during the 'establish-subscription' RPC.";
       uses notif-env-configuration;
     }
     augment "/sn:modify-subscription/sn:input" {
       description
         "This augmentation adds the configuration switches for
         enabling the notification envelope and other metadatas
         during the 'establish-subscription' RPC.";
       uses notif-env-configuration;
     }

     // YANG-Push Capabilities extension
     augment "/sysc:system-capabilities/notc:subscription-capabilities" {
       description
         "Extension to the subscription-capabilities model to enable
         clients to learn whether the publisher supports the
         notification-envelope";

       container notification-metadata {
         description
           "Adds the notification metadata capabilities to subscription
           capabilities.";
         uses notif-env-capabilities;
       }
     }
   }
   <CODE ENDS>

6.  Security Considerations

   TBD

7.  IANA Considerations

   This document describes the URI used for the IETF XML Registry and
   registers a new YANG module name.

7.1.  URI

   IANA is requested to add this document as a reference in the
   following URI in the IETF XML Registry [RFC3688].

   URI: urn:ietf:params:xml:ns:netconf:notification:2.0
   Registrant Contact: The IESG.
   XML: N/A; the requested URI is an XML namespace.
   Reference: RFC-to-be



Huang Feng, et al.        Expires 22 April 2025                [Page 19]

Internet-Draft       YANG-Push Notification Envelope        October 2024


7.2.  YANG module name

   This document registers the following YANG module in the YANG Module
   Names Registry [RFC6020], within the "YANG Parameters" registry:

   name: ietf-yp-notification
   namespace: urn:ietf:params:xml:ns:netconf:notification:2.0
   prefix: inotenv
   reference: RFC-to-be

7.3.  YANG SID-file

   IANA is requested to register a new ".sid" file in the "IETF YANG SID
   Registry" [I-D.ietf-core-sid]:

   SID range entry point: TBD
   SID range size: 50
   YANG module name: ietf-yp-notification
   reference: RFC-to-be

   A ".sid" file is proposed in Appendix A.

8.  Acknowledgements

   The authors would like to thank Per Anderson, Andy Bierman, Carsten
   Bormann, Mohamed Boucadair, Tom Petch, Jason Sterne, Kent Watsen and
   Rob Wilton for their review and valuable comments.

9.  References

9.1.  Normative References

   [I-D.ietf-core-sid]
              Veillette, M., Pelov, A., Petrov, I., Bormann, C., and M.
              Richardson, "YANG Schema Item iDentifier (YANG SID)", Work
              in Progress, Internet-Draft, draft-ietf-core-sid-24, 22
              December 2023, <https://datatracker.ietf.org/doc/html/
              draft-ietf-core-sid-24>.

   [RFC1213]  McCloghrie, K. and M. Rose, "Management Information Base
              for Network Management of TCP/IP-based internets: MIB-II",
              STD 17, RFC 1213, DOI 10.17487/RFC1213, March 1991,
              <https://www.rfc-editor.org/info/rfc1213>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.



Huang Feng, et al.        Expires 22 April 2025                [Page 20]

Internet-Draft       YANG-Push Notification Envelope        October 2024


   [RFC3339]  Klyne, G. and C. Newman, "Date and Time on the Internet:
              Timestamps", RFC 3339, DOI 10.17487/RFC3339, July 2002,
              <https://www.rfc-editor.org/info/rfc3339>.

   [RFC3688]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688,
              DOI 10.17487/RFC3688, January 2004,
              <https://www.rfc-editor.org/info/rfc3688>.

   [RFC5277]  Chisholm, S. and H. Trevino, "NETCONF Event
              Notifications", RFC 5277, DOI 10.17487/RFC5277, July 2008,
              <https://www.rfc-editor.org/info/rfc5277>.

   [RFC6020]  Bjorklund, M., Ed., "YANG - A Data Modeling Language for
              the Network Configuration Protocol (NETCONF)", RFC 6020,
              DOI 10.17487/RFC6020, October 2010,
              <https://www.rfc-editor.org/info/rfc6020>.

   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,
              and A. Bierman, Ed., "Network Configuration Protocol
              (NETCONF)", RFC 6241, DOI 10.17487/RFC6241, June 2011,
              <https://www.rfc-editor.org/info/rfc6241>.

   [RFC6991]  Schoenwaelder, J., Ed., "Common YANG Data Types",
              RFC 6991, DOI 10.17487/RFC6991, July 2013,
              <https://www.rfc-editor.org/info/rfc6991>.

   [RFC7950]  Bjorklund, M., Ed., "The YANG 1.1 Data Modeling Language",
              RFC 7950, DOI 10.17487/RFC7950, August 2016,
              <https://www.rfc-editor.org/info/rfc7950>.

   [RFC7951]  Lhotka, L., "JSON Encoding of Data Modeled with YANG",
              RFC 7951, DOI 10.17487/RFC7951, August 2016,
              <https://www.rfc-editor.org/info/rfc7951>.

   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, "RESTCONF
              Protocol", RFC 8040, DOI 10.17487/RFC8040, January 2017,
              <https://www.rfc-editor.org/info/rfc8040>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8639]  Voit, E., Clemm, A., Gonzalez Prieto, A., Nilsen-Nygaard,
              E., and A. Tripathy, "Subscription to YANG Notifications",
              RFC 8639, DOI 10.17487/RFC8639, September 2019,
              <https://www.rfc-editor.org/info/rfc8639>.





Huang Feng, et al.        Expires 22 April 2025                [Page 21]

Internet-Draft       YANG-Push Notification Envelope        October 2024


   [RFC8641]  Clemm, A. and E. Voit, "Subscription to YANG Notifications
              for Datastore Updates", RFC 8641, DOI 10.17487/RFC8641,
              September 2019, <https://www.rfc-editor.org/info/rfc8641>.

   [RFC8791]  Bierman, A., Björklund, M., and K. Watsen, "YANG Data
              Structure Extensions", RFC 8791, DOI 10.17487/RFC8791,
              June 2020, <https://www.rfc-editor.org/info/rfc8791>.

   [RFC8792]  Watsen, K., Auerswald, E., Farrel, A., and Q. Wu,
              "Handling Long Lines in Content of Internet-Drafts and
              RFCs", RFC 8792, DOI 10.17487/RFC8792, June 2020,
              <https://www.rfc-editor.org/info/rfc8792>.

   [RFC9187]  Touch, J., "Sequence Number Extension for Windowed
              Protocols", RFC 9187, DOI 10.17487/RFC9187, January 2022,
              <https://www.rfc-editor.org/info/rfc9187>.

   [RFC9196]  Lengyel, B., Clemm, A., and B. Claise, "YANG Modules
              Describing Capabilities for Systems and Datastore Update
              Notifications", RFC 9196, DOI 10.17487/RFC9196, February
              2022, <https://www.rfc-editor.org/info/rfc9196>.

   [RFC9254]  Veillette, M., Ed., Petrov, I., Ed., Pelov, A., Bormann,
              C., and M. Richardson, "Encoding of Data Modeled with YANG
              in the Concise Binary Object Representation (CBOR)",
              RFC 9254, DOI 10.17487/RFC9254, July 2022,
              <https://www.rfc-editor.org/info/rfc9254>.

   [W3C.REC-xml-20001006]
              Bray, T., Paoli, J., Sperberg-McQueen, M., and E. Maler,
              "Extensible Markup Language (XML) 1.0 (Second Edition)",
              W3C, October 2000,
              <https://www.w3.org/TR/2000/REC-xml-20001006>.

9.2.  Informative References

   [RFC6470]  Bierman, A., "Network Configuration Protocol (NETCONF)
              Base Notifications", RFC 6470, DOI 10.17487/RFC6470,
              February 2012, <https://www.rfc-editor.org/info/rfc6470>.

   [RFC8259]  Bray, T., Ed., "The JavaScript Object Notation (JSON) Data
              Interchange Format", STD 90, RFC 8259,
              DOI 10.17487/RFC8259, December 2017,
              <https://www.rfc-editor.org/info/rfc8259>.

   [RFC8340]  Bjorklund, M. and L. Berger, Ed., "YANG Tree Diagrams",
              BCP 215, RFC 8340, DOI 10.17487/RFC8340, March 2018,
              <https://www.rfc-editor.org/info/rfc8340>.



Huang Feng, et al.        Expires 22 April 2025                [Page 22]

Internet-Draft       YANG-Push Notification Envelope        October 2024


   [RFC9232]  Song, H., Qin, F., Martinez-Julia, P., Ciavaglia, L., and
              A. Wang, "Network Telemetry Framework", RFC 9232,
              DOI 10.17487/RFC9232, May 2022,
              <https://www.rfc-editor.org/info/rfc9232>.

Appendix A.  .sid file

   Note to the RFC-Editor: Please remove this section before publishing.

   For CBOR encoding using YANG-SIDs identifiers, a ".sid" file is
   requested to IANA in Section 7.3.

   <CODE BEGINS> file "ietf-yp-notification@2024-10-18.sid"
   {
     "ietf-sid-file:sid-file": {
       "module-name": "ietf-yp-notification",
       "module-revision": "2024-10-10",
       "description": "YANG-Push Notification Envelope",
       "dependency-revision": [
         {
           "module-name": "ietf-yang-types",
           "module-revision": "2013-07-15"
         },
         {
           "module-name": "ietf-subscribed-notifications",
           "module-revision": "2019-09-09"
         }
       ],
       "assignment-range": [
         {
           "entry-point": "2550",
           "size": "50"
         }
       ],
       "item": [
         {
           "namespace": "module",
           "identifier": "ietf-yp-notification",
           "sid": "2550"
         },
         {
           "namespace": "data",
           "identifier": "/ietf-yp-notification:envelope",
           "sid": "2551"
         },
         {
           "namespace": "data",
           "identifier": "/ietf-yp-notification:envelope/event-time",



Huang Feng, et al.        Expires 22 April 2025                [Page 23]

Internet-Draft       YANG-Push Notification Envelope        October 2024


           "sid": "2552"
         },
         {
           "namespace": "data",
           "identifier": "/ietf-yp-notification:envelope/hostname",
           "sid": "2553"
         },
         {
           "namespace": "data",
           "identifier": "/ietf-yp-notification:envelope/sequence-number",
           "sid": "2554"
         },
         {
           "namespace": "data",
           "identifier": "/ietf-yp-notification:envelope/notification-contents",
           "sid": "2555"
         }
       ]
     }
   }
   <CODE ENDS>

           Figure 6: .sid file for "ietf-yp-notification" module

Authors' Addresses

   Alex Huang Feng
   INSA-Lyon
   Lyon
   France
   Email: alex.huang-feng@insa-lyon.fr


   Pierre Francois
   INSA-Lyon
   Lyon
   France
   Email: pierre.francois@insa-lyon.fr


   Thomas Graf
   Swisscom
   Binzring 17
   CH-8045 Zurich
   Switzerland
   Email: thomas.graf@swisscom.com





Huang Feng, et al.        Expires 22 April 2025                [Page 24]

Internet-Draft       YANG-Push Notification Envelope        October 2024


   Benoit Claise
   Huawei
   Email: benoit.claise@huawei.com
















































Huang Feng, et al.        Expires 22 April 2025                [Page 25]
